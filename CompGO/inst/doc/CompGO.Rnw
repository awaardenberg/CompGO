\documentclass[11pt, oneside]{article}
\usepackage{geometry}
\geometry{letterpaper}
\usepackage{graphicx}
\usepackage{amssymb}
\usepackage[affil-it]{authblk}

\title{CompGO vignette}
\author{Sam Bassett, Ash Waardenberg}
\affil{Developmental and Stem Cell Biology Lab,\\Victor Chang Cardiac Research Institute,\\Darlinghurst, Sydney, Australia}
\date{}

\begin{document}
\maketitle
%\VignetteIndexEntry{Introduction}
\section{Introduction}
This package contains functions to accomplish several tasks relating to gene ontology enrichment comparison and visualisation. It interfaces with rtracklayer and VariantAnnotation to easily annotate .bed files with genes, and with RDAVIDWebService to generate functional annotation charts based on these gene lists. From here, we provide several methods for visualisation, including viewing the GO term hierarchy in two samples using a directed acyclic graph (DAG), performing a z-score standardisation on the GO terms returned from DAVID, comparing these directly using a pairwise scatterplot with linear fit and Jaccard metric, performing a Kolomogorov-Smirnov test against the distributions to determine their similarity, and clustering multiple inputs into a dendrogram.\\

\section{Generation of Gene Ontology data}

The first step in this analysis pipeline is generating the individual Gene Ontology data for each dataset. We provide an interface to generate a list of genes from input .bed coordinates with the function \begin{verbatim}anotateBedFromDb\end{verbatim}, which can take either a system path or a GRanges object as input:
<<>>=
library(CompGO)
library(TxDb.Mmusculus.UCSC.mm9.knownGene)
data(bed.sample)
# Here we create the GRanges object:
sample.range = GRanges(seqnames=bed.sample$chr, IRanges(start=bed.sample$start, end=bed.sample$end))
# Note that the window around the .bed region beyond which genes are cutoff is 5kb, this is modifiable
sample.annotated = annotateBedFromDb(bedfile = sample.range, db = TxDb.Mmusculus.UCSC.mm9.knownGene)
head(sample.annotated)
@

Once we have this annotated GRanges object, we can use the list of genes contained within to query DAVID and return the full functional annotation chart. Note that there are several parameters available for tweaking here, especially \begin{verbatim}rawValues\end{verbatim} - this parameter tells DAVID to do no thresholding of results whatsoever, giving the user of this package the power to perform their own thresholding. Since DAVID requires registration before the use of their Web Service R package, you should register first then substitute the placeholder email for your own.
<<>>=
# fnAnot = getFnAnot_genome(sample.annotated$gene_id, email = "PLaceholder@@inst.edu", listName="sample")
# We instead use examples from the RDAVIDWebService package, but without KEGG data:
data(funChart1)
data(funChart2)
funChart1 = subset(funChart1, Category %in% c("GOTERM_BP_ALL", "GOTERM_MF_ALL", "GOTERM_CC_ALL"))
funChart2 = subset(funChart2, Category %in% c("GOTERM_BP_ALL", "GOTERM_MF_ALL", "GOTERM_CC_ALL"))
str(funChart1)
@

Now that you have several functional annotation charts, we can start comparing and visualising them. If you had an entire directory of them, it's possible to generate a dendrogram from them to measure their similarity using the \begin{verbatim}zTransformDirectory\end{verbatim} function - here, however, we will focus on finer comparison methods.\\
A good measure of similarity between the sets is the Kolomogorov-Smirnov test, performed as follows:
<<>>=
ksTest(funChart1, funChart2)
@

This plot shows that there is significant difference between the distributions of charts 1 and 2. Going further, we can determine that almost no genes are shared by the two gene sets and there is next to no functional correlation by looking at the pairwise plots:
<<>>=
plotZScores(funChart1, funChart2)
@

This is confirmed by the sliding Jaccard metric, which shows that the overlap between the most significant terms of each list is very poor:
<<>>=
slidingJaccard(funChart1, funChart2)
@

%\VignetteIndexEntry{Dumping UCSC databases}
\section{Dumping UCSC databases}
We provide the UCSC mm9 refGene database as a data file, but if a different track is needed this function can be used to do so. It can sometimes take some time to run, since it's downloading a large file.

<<>>=
## Get UCSC database for human genome, refGene track
library(CompGO)
#db = ucscDbDump(genome="hg19") # instead of running this
    ## unnecessarily, the next statement is equivalent:
data(ucsc.mm9)
db = ucsc.mm9
str(db)
@

%\VignetteIndexEntry{.bed file importing and annotation}
\section{.bed file importing and annotation}
Reading a .bed file into R is easy:
\begin{verbatim}
## Not run, needs path
bed = read.bed('./path_to_file.bed')
## Sometimes, such as when using biomaRt, the chromosome
## name must be removed, so an option exists to do so
bed = read.bed('./path_to_file.bed', subChr=TRUE)
\end{verbatim}
Once a .bed file is read, you can start annotation. Here we use the sample .bed file provided.
<<>>=
data(bed.sample)
## This step can take some time
geneList = annotateBedFromUCSC(bedfile=bed.sample,db=ucsc.mm9)
str(geneList)
@

%\VignetteIndexEntry{Functional Enrichment and visualisation}
\section{Functional Enrichment and visualisation}
This gene list can then be passed on to DAVID for gene ontology enrichment analysis. This returns an object of type DAVIDFunctionalAnnotationChart, but it can be accessed similarly to a data.frame.
\begin{verbatim}
## Not run, since it needs a registered email
fnAnot = getFnAnot_genome(geneList$name2, email="your_registered@email.com",
+	idType="REFSEQ_MRNA",listName="sample1")
str(fnAnot)
\end{verbatim}

After obtaining an enrichment table, we can visualise differences between two sets of genes (or two .bed files) using either a pairwise scatterplot or a combination directed acyclic graph (DAG), where each node (representing an individual GO term) is coloured based on which set it came from.
\begin{verbatim}
## Since this requires email registration, the following won't be run.
anot1 = getFnAnot_genome(geneList1, email="email@email.com")
anot2 = getFnAnot_genome(geneList2, email="email@email.com")

## To produce scatterplot:
plotPairwise(anot1, anot2, cutoff = 0.05) # using benjamini as metric
# plotting all GO terms, even if they only appear in one set
plotPairwise(anot1, anot2, plotNA=TRUE, cutoff=0.1)

## For DAGs:
plotTwoGODags(anot1, anot2) # no relaxation, default colours
plotTwoGODags(anot1, anot2, relaxPvals = TRUE) # with relaxation
\end{verbatim}


\end{document}
